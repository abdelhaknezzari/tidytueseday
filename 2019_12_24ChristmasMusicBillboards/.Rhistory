select(year,fear,surprise,trust,joy) %>%
head(1) %>%
gather(key = "sentiment", value = "value", -year) %>%
ggplot(aes(x=sentiment,y=value)) +
geom_polygon(aes(group = year, color = year), fill = NA,  show.legend = FALSE) +
geom_line(aes(group = year, color = year)) +
theme(strip.text.x = element_text(size = rel(0.8)),
axis.text.x = element_text(size = rel(0.8)),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()) +
xlab("") + ylab("") +
coord_radar()
lyric_df %>% mutate(year=as.factor(year)) %>%
mutate( lyric = replace_contraction(lyric)) %>%
unnest_tokens(word,lyric) %>%
anti_join( stop_words ) %>%
mutate(word = textstem::lemmatize_words(word)) %>%
left_join(get_sentiments("nrc"))   %>%
count(year,week_position,sentiment,word) %>%
spread(key = sentiment,value =n ,fill = 0) %>%
group_by(year) %>%
summarise(anger = sum(anger),
anticipation = sum(anticipation),
disgust = sum(disgust),
fear = sum(fear),
joy = sum(joy),
negative = sum(negative),
positive = sum(positive),
sadness= sum(sadness),
surprise = sum(surprise),
trust = sum(trust),
week_position = mean(week_position)) %>%
arrange(desc(week_position) )%>%
select(year,surprise,trust,joy) %>%
head(1) %>%
gather(key = "sentiment", value = "value", -year) %>%
ggplot(aes(x=sentiment,y=value)) +
geom_polygon(aes(group = year, color = year), fill = NA,  show.legend = FALSE) +
geom_line(aes(group = year, color = year)) +
theme(strip.text.x = element_text(size = rel(0.8)),
axis.text.x = element_text(size = rel(0.8)),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()) +
xlab("") + ylab("") +
coord_radar()
lyric_df %>% mutate(year=as.factor(year)) %>%
mutate( lyric = replace_contraction(lyric)) %>%
unnest_tokens(word,lyric) %>%
anti_join( stop_words ) %>%
mutate(word = textstem::lemmatize_words(word)) %>%
left_join(get_sentiments("nrc"))   %>%
count(year,week_position,sentiment,word) %>%
spread(key = sentiment,value =n ,fill = 0) %>%
group_by(year) %>%
summarise(anger = sum(anger),
anticipation = sum(anticipation),
disgust = sum(disgust),
fear = sum(fear),
joy = sum(joy),
negative = sum(negative),
positive = sum(positive),
sadness= sum(sadness),
surprise = sum(surprise),
trust = sum(trust),
week_position = mean(week_position)) %>%
arrange(desc(week_position) )%>%
select(year,surprise,trust,joy) %>%
head(4) %>%
gather(key = "sentiment", value = "value", -year) %>%
ggplot(aes(x=sentiment,y=value)) +
geom_polygon(aes(group = year, color = year), fill = NA,  show.legend = FALSE) +
geom_line(aes(group = year, color = year)) +
theme(strip.text.x = element_text(size = rel(0.8)),
axis.text.x = element_text(size = rel(0.8)),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()) +
xlab("") + ylab("") +
coord_radar()
lyric_df %>% mutate(year=as.factor(year)) %>%
mutate( lyric = replace_contraction(lyric)) %>%
unnest_tokens(word,lyric) %>%
anti_join( stop_words ) %>%
mutate(word = textstem::lemmatize_words(word)) %>%
left_join(get_sentiments("nrc"))   %>%
count(year,week_position,sentiment,word) %>%
spread(key = sentiment,value =n ,fill = 0) %>%
group_by(year) %>%
summarise(anger = sum(anger),
anticipation = sum(anticipation),
disgust = sum(disgust),
fear = sum(fear),
joy = sum(joy),
negative = sum(negative),
positive = sum(positive),
sadness= sum(sadness),
surprise = sum(surprise),
trust = sum(trust),
week_position = mean(week_position)) %>%
arrange(desc(week_position) )%>%
select(year,surprise,trust,joy) %>%
head(10) %>%
gather(key = "sentiment", value = "value", -year) %>%
ggplot(aes(x=sentiment,y=value)) +
geom_polygon(aes(group = year, color = year), fill = NA,  show.legend = FALSE) +
geom_line(aes(group = year, color = year)) +
theme(strip.text.x = element_text(size = rel(0.8)),
axis.text.x = element_text(size = rel(0.8)),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()) +
xlab("") + ylab("") +
coord_radar()
lyric_df %>% mutate(year=as.factor(year)) %>%
mutate( lyric = replace_contraction(lyric)) %>%
unnest_tokens(word,lyric) %>%
anti_join( stop_words ) %>%
mutate(word = textstem::lemmatize_words(word)) %>%
left_join(get_sentiments("nrc"))   %>%
count(year,week_position,sentiment,word) %>%
spread(key = sentiment,value =n ,fill = 0) %>%
group_by(year) %>%
summarise(anger = sum(anger),
anticipation = sum(anticipation),
disgust = sum(disgust),
fear = sum(fear),
joy = sum(joy),
negative = sum(negative),
positive = sum(positive),
sadness= sum(sadness),
surprise = sum(surprise),
trust = sum(trust),
week_position = mean(week_position)) %>%
arrange(desc(week_position) )%>%
select(year,surprise,trust,joy,positive) %>%
head(10) %>%
gather(key = "sentiment", value = "value", -year) %>%
ggplot(aes(x=sentiment,y=value)) +
geom_polygon(aes(group = year, color = year), fill = NA,  show.legend = FALSE) +
geom_line(aes(group = year, color = year)) +
theme(strip.text.x = element_text(size = rel(0.8)),
axis.text.x = element_text(size = rel(0.8)),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()) +
xlab("") + ylab("") +
coord_radar()
lyric_df %>% mutate(year=as.factor(year)) %>%
mutate( lyric = replace_contraction(lyric)) %>%
unnest_tokens(word,lyric) %>%
anti_join( stop_words ) %>%
mutate(word = textstem::lemmatize_words(word)) %>%
left_join(get_sentiments("nrc"))   %>%
count(year,week_position,sentiment,word) %>%
spread(key = sentiment,value =n ,fill = 0) %>%
group_by(year) %>%
summarise(anger = sum(anger),
anticipation = sum(anticipation),
disgust = sum(disgust),
fear = sum(fear),
joy = sum(joy),
negative = sum(negative),
positive = sum(positive),
sadness= sum(sadness),
surprise = sum(surprise),
trust = sum(trust),
week_position = mean(week_position)) %>%
arrange(desc(week_position) )%>%
select(year,surprise,trust,joy,positive,surprise) %>%
head(10) %>%
gather(key = "sentiment", value = "value", -year) %>%
ggplot(aes(x=sentiment,y=value)) +
geom_polygon(aes(group = year, color = year), fill = NA,  show.legend = FALSE) +
geom_line(aes(group = year, color = year)) +
theme(strip.text.x = element_text(size = rel(0.8)),
axis.text.x = element_text(size = rel(0.8)),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()) +
xlab("") + ylab("") +
coord_radar()
lyric_df %>% mutate(year=as.factor(year)) %>%
mutate( lyric = replace_contraction(lyric)) %>%
unnest_tokens(word,lyric) %>%
anti_join( stop_words ) %>%
mutate(word = textstem::lemmatize_words(word)) %>%
left_join(get_sentiments("nrc"))   %>%
count(year,week_position,sentiment,word) %>%
spread(key = sentiment,value =n ,fill = 0) %>%
group_by(year) %>%
summarise(anger = sum(anger),
anticipation = sum(anticipation),
disgust = sum(disgust),
fear = sum(fear),
joy = sum(joy),
negative = sum(negative),
positive = sum(positive),
sadness= sum(sadness),
surprise = sum(surprise),
trust = sum(trust),
week_position = mean(week_position)) %>%
arrange(desc(week_position) )%>%
select(year,surprise,trust,joy,positive,surprise) %>%
head(10) %>%
gather(key = "sentiment", value = "value", -year) %>%
ggplot(aes(x=sentiment,y=value)) +
geom_polygon(aes(group = year, color = year), fill = NA,  show.legend = FALSE) +
geom_line(aes(group = year, color = year)) +
theme(strip.text.x = element_text(size = rel(0.8)),
axis.text.x = element_text(size = rel(0.8)),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()) +
xlab("") + ylab("") +
coord_radar()
lyric_df %>% mutate(year=as.factor(year)) %>%
mutate( lyric = replace_contraction(lyric)) %>%
unnest_tokens(word,lyric) %>%
anti_join( stop_words ) %>%
mutate(word = textstem::lemmatize_words(word)) %>%
left_join(get_sentiments("nrc"))   %>%
count(year,week_position,sentiment,word) %>%
spread(key = sentiment,value =n ,fill = 0) %>%
group_by(year) %>%
summarise(anger = sum(anger),
anticipation = sum(anticipation),
disgust = sum(disgust),
fear = sum(fear),
joy = sum(joy),
negative = sum(negative),
positive = sum(positive),
sadness= sum(sadness),
surprise = sum(surprise),
trust = sum(trust),
week_position = mean(week_position)) %>%
arrange(desc(week_position) )%>%
select(year,surprise,trust,joy,positive,sadness) %>%
head(10) %>%
gather(key = "sentiment", value = "value", -year) %>%
ggplot(aes(x=sentiment,y=value)) +
geom_polygon(aes(group = year, color = year), fill = NA,  show.legend = FALSE) +
geom_line(aes(group = year, color = year)) +
theme(strip.text.x = element_text(size = rel(0.8)),
axis.text.x = element_text(size = rel(0.8)),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()) +
xlab("") + ylab("") +
coord_radar()
christmas_songs %>% group_by( performer) %>%
summarise( peak = sum(peak_position),
chart = sum(weeks_on_chart),
number_songs = n_distinct(songid) ) %>%
arrange( desc(peak), desc(chart)) %>%
top_n(6) %>% View()
christmas_songs %>% group_by( performer) %>%
summarise( peak = sum(peak_position),
chart = sum(weeks_on_chart),
number_songs = n_distinct(songid) ) %>%
arrange( desc(peak), desc(chart)) %>%
top_n(6) %>%
ggplot(aes(performer, chart,color = peak)) + geom_point()
christmas_songs %>% group_by( performer) %>%
summarise( peak = sum(peak_position),
chart = sum(weeks_on_chart),
number_songs = n_distinct(songid) ) %>%
arrange( desc(peak), desc(chart)) %>%
top_n(6) %>%
ggplot(aes(performer, chart,color = peak)) + geom_point()
christmas_songs %>% group_by( year) %>%
summarise( peak = sum(peak_position),
chart = sum(weeks_on_chart),
number_songs = n_distinct(songid) ) %>%
ggplot( aes(year,peak)) +
geom_col(fill="blue")
christmas_songs %>% group_by( year) %>%
summarise( "Highest position" = sum(peak_position),
"Number of weeks on billboard charts" = sum(weeks_on_chart),
"Number of songs" = n_distinct(songid) ) %>%
gather(key= "key", value="value",-year) %>%
ggplot( ) + geom_bar( aes(year,value,fill=key),stat = "identity") +
coord_flip()
christmas_songs %>%
group_by( year) %>%
summarise( "Peaks position" = sum(peak_position),
"Weeks on chart" = sum(weeks_on_chart),
"Number of songs" = n_distinct(songid) ) %>%
gather(key="Variable",value="value",-year) %>%
ggplot(aes(year,value,width=1)) +
geom_tile(aes(fill=Variable))
christmas_songs %>% group_by( year) %>%
summarise( "Highest position" = sum(peak_position),
"Number of weeks on billboard charts" = sum(weeks_on_chart),
"Number of songs" = n_distinct(songid) ) %>%
gather(key= "Variable", value="value",-year) %>%
ggplot( ) + geom_bar( aes(year,value,fill=Variable),stat = "identity")+
facet_wrap(~Variable) +
theme(legend.position= "top" )+
coord_flip()
lyric_df %>%
mutate( lyric = replace_contraction(lyric)) %>%
unnest_tokens(word,lyric) %>%
anti_join( stop_words ) %>%
mutate(word = textstem::lemmatize_words(word)) %>%
count(track_title,word) %>%
cast_dtm(track_title,word,n) %>%
LDA(k=7) %>%
tidy(matrix="gamma") %>%
rename(track_title = document) %>%
mutate(topic = paste("topic",topic,sep = "")) %>%
right_join((lyric_df %>% select(songid,track_title))) %>%
group_by(track_title,songid,gamma,topic) %>%
summarise( topic_count = n()) %>%
spread(key = topic,value = topic_count , fill=0) %>%
group_by(songid) %>%
summarise( topic1 = sum(topic1),
topic2 = sum(topic2),
topic3 = sum(topic3),
topic4 = sum(topic4),
topic5 = sum(topic5),
topic6 = sum(topic6),
topic7 = sum(topic7),
gamma  = sum(gamma)) %>%
gather(key = "topic", value = "value", -songid) %>%
arrange(value) %>%
ggplot() +
geom_bar(aes(songid,value,fill=topic), stat="identity",
position = position_stack(reverse = TRUE)) +
coord_flip() +
theme(legend.position = "top")
lyric_df %>%
mutate( lyric = replace_contraction(lyric)) %>%
unnest_tokens(word,lyric) %>%
anti_join( stop_words ) %>%
mutate(word = textstem::lemmatize_words(word)) %>%
count(track_title,word) %>%
cast_dtm(track_title,word,n) %>%
LDA(k=7) %>%
tidy(matrix="gamma") %>%
rename(track_title = document) %>%
mutate(topic = paste("topic",topic,sep = "")) %>%
right_join((lyric_df %>% select(year,track_title))) %>%
group_by(track_title,year,gamma,topic) %>%
summarise( topic_count = n()) %>%
spread(key = topic,value = topic_count , fill=0) %>%
group_by(year) %>%
summarise( topic1 = sum(topic1),
topic2 = sum(topic2),
topic3 = sum(topic3),
topic4 = sum(topic4),
topic5 = sum(topic5),
topic6 = sum(topic6),
topic7 = sum(topic7),
gamma  = sum(gamma)) %>%
gather(key = "topic", value = "value", -year) %>%
arrange(value) %>%
ggplot() +
geom_bar(aes(year,value,fill=topic), stat="identity",
position = position_stack(reverse = TRUE)) +
coord_flip() +
theme(legend.position = "top")
lyric_df %>%
mutate( lyric = replace_contraction(lyric)) %>%
unnest_tokens(word,lyric) %>%
anti_join( stop_words ) %>%
mutate(word = textstem::lemmatize_words(word)) %>%
left_join(get_sentiments("nrc"))   %>%
count(year,sentiment,word) %>%
spread(key = sentiment,value =n ,fill = 0) %>%
group_by(year) %>%
summarise(anger = sum(anger),
anticipation = sum(anticipation),
disgust = sum(disgust),
fear = sum(fear),
joy = sum(joy),
negative = sum(negative),
positive = sum(positive),
sadness= sum(sadness),
surprise = sum(surprise),
trust = sum(trust)) %>%
gather(key = "sentiment", value = "value", -year) %>%
ggplot() +
geom_bar(aes(year,value,fill=sentiment),stat="identity", position = position_stack(reverse = TRUE)) +
coord_flip() +
theme(legend.position = "top")
lyric_df %>%
mutate( lyric = replace_contraction(lyric)) %>%
unnest_tokens(word,lyric) %>%
anti_join( stop_words ) %>%
mutate(word = textstem::lemmatize_words(word)) %>%
left_join(get_sentiments("nrc"))   %>%
count(songid,sentiment,word) %>%
spread(key = sentiment,value =n ,fill = 0) %>%
group_by(songid) %>%
summarise(anger = sum(anger),
anticipation = sum(anticipation),
disgust = sum(disgust),
fear = sum(fear),
joy = sum(joy),
negative = sum(negative),
positive = sum(positive),
sadness= sum(sadness),
surprise = sum(surprise),
trust = sum(trust)) %>%
arrange(anger,anticipation,fear,joy,surprise,trust,negative,sadness,positive) %>%
head(20) %>%
gather(key = "sentiment", value = "value", -songid) %>%
ggplot() +
geom_bar(aes(songid,value,fill=sentiment),stat="identity", position = position_stack(reverse = TRUE)) +
coord_flip() +
theme(legend.position = "top")
christmas_songs %>% is.na.data.frame()
christmas_songs %>% is.data.frame()
lyric_df %>% is.data.frame()
library(markdown)
? markdown::render()
? render
render("tests.Rmd")
library(rmarkdown)
render("tests.Rmd")
library(tidyverse)
library(tidytext)
library(textclean)
library(textdata)
library(topicmodels)
library(genius)
christmas_songs <- readRDS(file="christmas_songs.rds")
if(!(christmas_songs %>% is.data.frame()))
{
tuesdata <- tidytuesdayR::tt_load(2019, week = 52)
christmas_songs <- tuesdata$christmas_songs
rm(tuesdata)
christmas_songs %>% saveRDS(file="christmas_songs.rds")
}
lyric_df <- readRDS(file="lyric_df.rds")
if(!(lyric_df %>% is.data.frame()))
{
lyric_df <- christmas_songs %>%
select("title" = song,
"artist" = performer,
songid,
weekid) %>%
add_genius(artist = artist, title = title) %>%
select(-lyrics)
}
if(!(lyric_df %>% is.data.frame()))
{
missing_lyrics_songs <-  christmas_songs %>%
anti_join(lyric_df,by = c("weekid", "songid")) %>%
rename(artist= performer )
}
if(!(lyric_df %>% is.data.frame()))
{
missing_lyrics_songs <- missing_lyrics_songs  %>%
mutate( songid = songid  %>% as.character(),
artist = artist %>% as.character(),
song   = str_remove(songid,artist ),
url    = gen_song_url(artist = artist, song = song) )
}
get_missing_lyrics <- function( raw) {
tryCatch(
raw["url"] %>% as.character() %>% genius_url() %>%
mutate(
url=raw["url"],
song=raw["song"],
instance=raw["instance"] %>% as.double(),
weeks_on_chart=raw["weeks_on_chart"] %>% as.double(),
day=raw["day"] %>% as.double(),
weekid = raw["weekid"],
artist = raw["artist"],
previous_week_position=raw["previous_week_position"] %>% as.double(),
year   = raw["year"] %>% as.double(),
week_position   = raw["week_position"] %>% as.double(),
songid = raw["songid"],
peak_position=raw["peak_position"] %>% as.double(),
month=raw["month"] %>% as.double()),
warning = function(warning) {print(paste("warning:",warning));
list(track_title="",line=1,lyric="", songid="TOBEREMOVED", weekid="NA")},
error   = function(error)   {print(paste("error:", error));
list(track_title="",line=1,lyric="NA", songid="TOBEREMOVED", weekid="")})
}
if(!(lyric_df %>% is.data.frame()))
{
missing_lyrics <- missing_lyrics_songs %>%
apply(1,get_missing_lyrics) %>%
bind_rows() %>%
filter(songid!="TOBEREMOVED")
missing_lyrics %>% saveRDS(file="missing_lyrics.rds")
}
render("tests.Rmd")
christmas_songs %>% group_by( year) %>% summarise( peak = mean(peak_position),
chart = mean(weeks_on_chart) ) %>% tail()
christmas_songs %>% group_by( performer) %>%
summarise( peak = sum(peak_position),
chart = sum(weeks_on_chart),
number_songs = n_distinct(songid) ) %>%
arrange( desc(peak), desc(chart)) %>%
top_n(6) %>%
ggplot(aes(performer, chart,color = peak)) + geom_point()
render("tests.Rmd")
lyric_df %>%
mutate( lyric = replace_contraction(lyric)) %>%
unnest_tokens(word,lyric) %>%
anti_join( stop_words ) %>%
mutate(word = textstem::lemmatize_words(word)) %>%
count(track_title,word) %>%
cast_dtm(track_title,word,n) %>%
LDA(k=7) %>%
tidy(matrix="gamma") %>%
rename(track_title = document) %>%
mutate(topic = paste("topic",topic,sep = "")) %>%
right_join((lyric_df %>% select(songid,track_title))) %>%
group_by(track_title,songid,gamma,topic) %>%
summarise( topic_count = n()) %>%
ggplot(aes(songid)) +
geom_bar(aes(fill=topic), position = position_stack(reverse = TRUE)) +
coord_flip() +
theme(legend.position = "top")
